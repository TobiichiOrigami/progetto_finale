View(atp_matches)
for(i in [1:163965]){
[1:2]
1:2
for(i in 1:length(atp_matches$tourney_date)){
atp_matches$decade <-
if(as.numeric(substr(as.character(atp_matches$tourney_date[i]), 1, 4)) < 1980){
70
}else if(as.numeric(substr(as.character(atp_matches$tourney_date)[i], 1, 4)) < 1990){
80
}else if(as.numeric(substr(as.character(atp_matches$tourney_date)[i], 1, 4)) < 2000){
90
}else if(as.numeric(substr(as.character(atp_matches$tourney_date)[i], 1, 4)) < 2010){
00
}else if(as.numeric(substr(as.character(atp_matches$tourney_date)[i], 1, 4)) > 2009){
10
}
}
for(i in 1:length(atp_matches$tourney_date)){
atp_matches$decade[i] <-
if(as.numeric(substr(as.character(atp_matches$tourney_date[i]), 1, 4)) < 1980){
70
}else if(as.numeric(substr(as.character(atp_matches$tourney_date)[i], 1, 4)) < 1990){
80
}else if(as.numeric(substr(as.character(atp_matches$tourney_date)[i], 1, 4)) < 2000){
90
}else if(as.numeric(substr(as.character(atp_matches$tourney_date)[i], 1, 4)) < 2010){
00
}else if(as.numeric(substr(as.character(atp_matches$tourney_date)[i], 1, 4)) > 2009){
10
}
}
atp_matches$decade <- NULL
View(atp_matches)
length(atp_matches$tourney_date
)
for(i in 1:100){
atp_matches$decade[i] <-
if(as.numeric(substr(as.character(atp_matches$tourney_date[i]), 1, 4)) < 1980){
70
}else if(as.numeric(substr(as.character(atp_matches$tourney_date)[i], 1, 4)) < 1990){
80
}else if(as.numeric(substr(as.character(atp_matches$tourney_date)[i], 1, 4)) < 2000){
90
}else if(as.numeric(substr(as.character(atp_matches$tourney_date)[i], 1, 4)) < 2010){
00
}else if(as.numeric(substr(as.character(atp_matches$tourney_date)[i], 1, 4)) > 2009){
10
}
}
View(atp_matches)
atp_matches$decade <- NULL
View(atp_matches_1968)
library(dplyr)
atp_matches$Surface<-as.factor(atp_matches$Surface)
install.packages("dplyr")
library(dplyr)
atp_matches$Surface<-as.factor(atp_matches$Surface)
#這是R Code Chunk
library(readr)
atp_matches_1968 <- read_csv("D:/atp_datas/atp_matches_1968.csv")
atp_matches_1969 <- read_csv("D:/atp_datas/atp_matches_1969.csv")
atp_matches_1970 <- read_csv("D:/atp_datas/atp_matches_1970.csv")
atp_matches_1971 <- read_csv("D:/atp_datas/atp_matches_1971.csv")
atp_matches_1972 <- read_csv("D:/atp_datas/atp_matches_1972.csv")
atp_matches_1973 <- read_csv("D:/atp_datas/atp_matches_1973.csv")
atp_matches_1974 <- read_csv("D:/atp_datas/atp_matches_1974.csv")
atp_matches_1975 <- read_csv("D:/atp_datas/atp_matches_1975.csv")
atp_matches_1976 <- read_csv("D:/atp_datas/atp_matches_1976.csv")
atp_matches_1977 <- read_csv("D:/atp_datas/atp_matches_1977.csv")
atp_matches_1978 <- read_csv("D:/atp_datas/atp_matches_1978.csv")
atp_matches_1979 <- read_csv("D:/atp_datas/atp_matches_1979.csv")
atp_matches_1980 <- read_csv("D:/atp_datas/atp_matches_1980.csv")
atp_matches_1981 <- read_csv("D:/atp_datas/atp_matches_1981.csv")
atp_matches_1982 <- read_csv("D:/atp_datas/atp_matches_1982.csv")
atp_matches_1983 <- read_csv("D:/atp_datas/atp_matches_1983.csv")
atp_matches_1984 <- read_csv("D:/atp_datas/atp_matches_1984.csv")
atp_matches_1985 <- read_csv("D:/atp_datas/atp_matches_1985.csv")
atp_matches_1986 <- read_csv("D:/atp_datas/atp_matches_1986.csv")
atp_matches_1987 <- read_csv("D:/atp_datas/atp_matches_1987.csv")
atp_matches_1988 <- read_csv("D:/atp_datas/atp_matches_1988.csv")
atp_matches_1989 <- read_csv("D:/atp_datas/atp_matches_1989.csv")
atp_matches_1990 <- read_csv("D:/atp_datas/atp_matches_1990.csv")
atp_matches_1991 <- read_csv("D:/atp_datas/atp_matches_1991.csv")
atp_matches_1992 <- read_csv("D:/atp_datas/atp_matches_1992.csv")
atp_matches_1993 <- read_csv("D:/atp_datas/atp_matches_1993.csv")
atp_matches_1994 <- read_csv("D:/atp_datas/atp_matches_1994.csv")
atp_matches_1995 <- read_csv("D:/atp_datas/atp_matches_1995.csv")
atp_matches_1996 <- read_csv("D:/atp_datas/atp_matches_1996.csv")
atp_matches_1997 <- read_csv("D:/atp_datas/atp_matches_1997.csv")
atp_matches_1998 <- read_csv("D:/atp_datas/atp_matches_1998.csv")
atp_matches_1999 <- read_csv("D:/atp_datas/atp_matches_1999.csv")
atp_matches_2000 <- read_csv("D:/atp_datas/atp_matches_2000.csv")
atp_matches_2001 <- read_csv("D:/atp_datas/atp_matches_2001.csv")
atp_matches_2002 <- read_csv("D:/atp_datas/atp_matches_2002.csv")
atp_matches_2003 <- read_csv("D:/atp_datas/atp_matches_2003.csv")
atp_matches_2004 <- read_csv("D:/atp_datas/atp_matches_2004.csv")
atp_matches_2005 <- read_csv("D:/atp_datas/atp_matches_2005.csv")
atp_matches_2006 <- read_csv("D:/atp_datas/atp_matches_2006.csv")
atp_matches_2007 <- read_csv("D:/atp_datas/atp_matches_2007.csv")
atp_matches_2008 <- read_csv("D:/atp_datas/atp_matches_2008.csv")
atp_matches_2009 <- read_csv("D:/atp_datas/atp_matches_2009.csv")
atp_matches_2010 <- read_csv("D:/atp_datas/atp_matches_2010.csv")
atp_matches_2011 <- read_csv("D:/atp_datas/atp_matches_2011.csv")
atp_matches_2012 <- read_csv("D:/atp_datas/atp_matches_2012.csv")
atp_matches_2013 <- read_csv("D:/atp_datas/atp_matches_2013.csv")
atp_matches_2014 <- read_csv("D:/atp_datas/atp_matches_2014.csv")
atp_matches_2015 <- read_csv("D:/atp_datas/atp_matches_2015.csv")
atp_matches_2016 <- read_csv("D:/atp_datas/atp_matches_2016.csv")
atp_matches_2017 <- read_csv("D:/atp_datas/atp_matches_2017.csv")
atp_players <- read_csv("D:/atp_datas/atp_players.csv",
col_names = FALSE)
atp_matches <- rbind(atp_matches_1968, atp_matches_1969, atp_matches_1970, atp_matches_1971, atp_matches_1972, atp_matches_1973, atp_matches_1974, atp_matches_1975, atp_matches_1976, atp_matches_1977, atp_matches_1978, atp_matches_1979, atp_matches_1980, atp_matches_1981, atp_matches_1982, atp_matches_1983, atp_matches_1984, atp_matches_1985, atp_matches_1986, atp_matches_1987, atp_matches_1988, atp_matches_1989, atp_matches_1990, atp_matches_1991, atp_matches_1992, atp_matches_1993, atp_matches_1994, atp_matches_1995, atp_matches_1996, atp_matches_1997, atp_matches_1998, atp_matches_1999, atp_matches_2000, atp_matches_2001, atp_matches_2002, atp_matches_2003, atp_matches_2004, atp_matches_2005, atp_matches_2006, atp_matches_2007, atp_matches_2008, atp_matches_2009, atp_matches_2010, atp_matches_2011, atp_matches_2012, atp_matches_2013, atp_matches_2014, atp_matches_2015, atp_matches_2016, atp_matches_2017)
names(atp_players) <- c("player_id", "first_name", "last_name", "player_hand", "date_of_birth", "player_ioc")
library(dplyr)
atp_matches$Surface<-as.factor(atp_matches$Surface)
library(dplyr)
atp_matches$surface<-as.factor(atp_matches$surface)
ace.mean<-atp_matches%>%group_by(Surface)%>%
summarise(aceMean=mean(w_ace,na.rm = T))
library(dplyr)
atp_matches$surface<-as.factor(atp_matches$surface)
ace.mean<-atp_matches%>%group_by(surface)%>%
summarise(aceMean=mean(w_ace,na.rm = T))
ggplot()+geom_bar(data=ace.mean,
aes(x=Surface,y=aceMean),
stat = "identity")
library(dplyr)
library(ggplot2)
atp_matches$surface<-as.factor(atp_matches$surface)
ace.mean<-atp_matches%>%group_by(surface)%>%
summarise(aceMean=mean(w_ace,na.rm = T))
ggplot()+geom_bar(data=ace.mean,
aes(x=surface,y=aceMean),
stat = "identity")
library(dplyr)
library(ggplot2)
atp_matches$surface<-as.factor(atp_matches$surface)
ace.mean<-atp_matches%>%group_by(surface)%>%
summarise(aceMean=mean(w_ace,na.rm = T))
ggplot()+geom_bar(data=ace.mean,
aes(x=surface,y=aceMean),
stat = "identity")
View(atp_matches)
View(ace.mean)
ace.mean<-atp_matches%>%group_by(surface)%>%
summarise(aceMean=mean(w_ace,na.rm = T))
View(ace.mean)
library(dplyr)
library(ggplot2)
atp_matches$surface<-as.factor(atp_matches$surface)
ace.mean<-atp_matches%>%group_by(surface, na.rm = T)%>%
summarise(aceMean=mean(w_ace,na.rm = T))
library(dplyr)
library(ggplot2)
atp_matches$surface<-as.factor(atp_matches$surface)
ace.mean<-atp_matches%>%filter(!is.na(surface))%>%
group_by(surface)%>%summarise(aceMean=mean(w_ace,na.rm = T))
ggplot()+geom_bar(data=ace.mean,
aes(x=surface,y=aceMean),
stat = "identity")
library(dplyr)
library(ggplot2)
atp_matches$surface<-as.factor(atp_matches$surface)
ace.mean<-atp_matches%>%filter(!is.na(surface)&!is.na(w_ace))%>%
group_by(surface)%>%summarise(aceMean=mean(w_ace))
ggplot()+geom_bar(data=ace.mean,
aes(x=surface,y=aceMean),
stat = "identity")
View(ace.mean)
library(dplyr)
library(ggplot2)
atp_matches$surface<-as.factor(atp_matches$surface)
ace.mean<-atp_matches%>%filter(!is.na(surface))%>%
group_by(surface)%>%summarise(aceMean=mean(w_ace, na.rm = T))
ggplot()+geom_bar(data=ace.mean,
aes(x=surface,y=aceMean),
stat = "identity")
View(ace.mean)
library(data.table)
winner_iocAnalysis <- data.table(atp_matches)
winner_iocAnalysis <- winner_iocAnalysis[, .(Win = .N), by = winner_ioc]
colnames(winner_iocAnalysis)[1] <- "ioc"
winner_iocAnalysis
iocAnalysis <- data.table(atp_matches)
loser_iocAnalysis <- iocAnalysis[, .(Lose = .N), by = loser_ioc]
colnames(loser_iocAnalysis)[1] <- "ioc"
loser_iocAnalysis
iocAnalysis <- merge(winner_iocAnalysis, loser_iocAnalysis, by = "ioc")
iocAnalysis$Total <- iocAnalysis$Win + iocAnalysis$Lose
View(iocAnalysis)
library(treemap)
install.packages("treemap")
library(treemap)
treemap(iocAnalysis,
index="ioc", #分組依據
vSize="Total", #區塊大小
vColor="Win", #顏色深淺
type="value")
library(data.table)
winner_iocAnalysis <- data.table(atp_matches)
winner_iocAnalysis <- winner_iocAnalysis[, .(Win = .N), by = winner_ioc]
colnames(winner_iocAnalysis)[1] <- "ioc"
winner_iocAnalysis
iocAnalysis <- data.table(atp_matches)
loser_iocAnalysis <- iocAnalysis[, .(Lose = .N), by = loser_ioc]
colnames(loser_iocAnalysis)[1] <- "ioc"
loser_iocAnalysis
iocAnalysis <- merge(winner_iocAnalysis, loser_iocAnalysis, by = "ioc")
iocAnalysis$Total <- iocAnalysis$Win + iocAnalysis$Lose
iocAnalysis$Proportion <- iocAnalysis$Win / iocAnalysis$Total
library(treemap)
treemap(iocAnalysis,
index="ioc", #分組依據
vSize="Total", #區塊大小
vColor="Proportion", #顏色深淺
type="value")
library(treemap)
treemap(iocAnalysis,
index="ioc", #分組依據
vSize="Total", #區塊大小
vColor="Win", #顏色深淺
type="value")
library(treemap)
treemap(iocAnalysis,
index="ioc", #分組依據
vSize="Total", #區塊大小
vColor="Proportion", #顏色深淺
type="value")
for(i in 1:legth(atp_matches$tourney_date)){
atp_matches$decade[i] <-
if(substr(as.character(atp_matches$tourney_date[i]), 3, 3) == 6|substr(as.character(atp_matches$tourney_date[i]), 3, 3) == 7){
70
}else if(substr(as.character(atp_matches$tourney_date[i]), 3, 3) == 8){
80
}else if(substr(as.character(atp_matches$tourney_date[i]), 3, 3) == 9){
90
}else if(substr(as.character(atp_matches$tourney_date[i]), 3, 3) == 0){
00
}else if(substr(as.character(atp_matches$tourney_date[i]), 3, 3) == 1){
10
}
}
for(i in 1:length(atp_matches$tourney_date)){
atp_matches$decade[i] <-
if(substr(as.character(atp_matches$tourney_date[i]), 3, 3) == 6|substr(as.character(atp_matches$tourney_date[i]), 3, 3) == 7){
70
}else if(substr(as.character(atp_matches$tourney_date[i]), 3, 3) == 8){
80
}else if(substr(as.character(atp_matches$tourney_date[i]), 3, 3) == 9){
90
}else if(substr(as.character(atp_matches$tourney_date[i]), 3, 3) == 0){
00
}else if(substr(as.character(atp_matches$tourney_date[i]), 3, 3) == 1){
10
}
}
for(i in 1:length(atp_matches$tourney_date)){
atp_matches$decade <-
if(substr(as.character(atp_matches$tourney_date[i]), 3, 3) == 6|substr(as.character(atp_matches$tourney_date[i]), 3, 3) == 7){
70
}else if(substr(as.character(atp_matches$tourney_date[i]), 3, 3) == 8){
80
}else if(substr(as.character(atp_matches$tourney_date[i]), 3, 3) == 9){
90
}else if(substr(as.character(atp_matches$tourney_date[i]), 3, 3) == 0){
00
}else if(substr(as.character(atp_matches$tourney_date[i]), 3, 3) == 1){
10
}
}
library(dplyr)
library(ggplot2)
atp_matches$surface<-as.factor(atp_matches$surface)
ace.mean<-atp_matches%>%filter(!is.na(surface))%>%
group_by(surface)%>%summarise(aceMean=mean(as.numeric(w_ace), na.rm = T))
ggplot()+geom_bar(data=ace.mean,
aes(x=surface,y=aceMean),
stat = "identity")
library(dplyr)
library(ggplot2)
atp_matches$surface<-as.factor(atp_matches$surface)
ace.mean<-atp_matches%>%filter(!is.na(surface))%>%
group_by(surface)%>%summarise(aceMean=mean(as.numeric(w_ace), na.rm = T))
ggplot()+geom_bar(data=ace.mean,
aes(x=surface,y=aceMean),
stat = "identity")
library(dplyr)
library(ggplot2)
atp_matches$surface<-as.factor(atp_matches$surface)
ace.mean<-atp_matches%>%filter(!is.na(surface))%>%
group_by(surface)%>%summarise(aceMean=mean(as.numeric(w_ace), na.rm = T))
ggplot()+geom_bar(data=ace.mean,
aes(x=surface,y=aceMean),
stat = "identity",
fill="Green")
library(dplyr)
library(ggplot2)
atp_matches$surface<-as.factor(atp_matches$surface)
ace.mean<-atp_matches%>%filter(!is.na(surface))%>%
group_by(surface)%>%summarise(aceMean=mean(as.numeric(w_ace), na.rm = T))
ggplot()+geom_bar(data=ace.mean,
aes(x=surface,y=aceMean),
stat = "identity",
fill="darkgreen")
library(dplyr)
library(ggplot2)
atp_matches$surface<-as.factor(atp_matches$surface)
ace.mean<-atp_matches%>%filter(!is.na(surface))%>%
group_by(surface)%>%summarise(aceMean=mean(as.numeric(w_ace), na.rm = T))
ggplot()+geom_bar(data=ace.mean,
aes(x=surface,y=aceMean),
stat = "identity",
fill="darkgreen",
color="orange")
library(treemap)
treemap(iocAnalysis,
index="ioc", #分組依據
vSize="Total", #區塊大小
vColor="Proportion", #顏色深淺
type="value")
---
title: "男子網球勝率因子分析"
output: github_document
---
## 簡名浩、楊博翰分析議題背景
網球堪稱世界三大運動之一，也有紳士運動之稱，其起源於中世紀晚期的法國宮廷遊戲；而現代網球規則則是由19世紀一位英國少校所發明。
一場網球比賽大致由分、局及盤三要素組成，參與人數可以是2人或4人分為兩方，進行方式為雙方格網持拍相互將球回及過網，在允許球落地彈跳一次的前提下，首先令對方無法做出有效回擊球者便獲得
1分(point)，先得4分者得1局(game)，並且先得6局者得1盤(set)。現今ATP(國際男子職業網球協會)賽事為縮短比賽耗時，獲勝機制皆從五盤三勝改為三盤兩勝制。
在網球眾多賽事中，年度四大滿貫賽事是其中等級最高，也最被重視的比賽，其規模甚至超越四年一度的夏季奧林匹克運動會網球項目，即便是平常不接觸ATP賽事的觀眾都能因為大滿貫賽事而出現"一日球迷"的情況，它們分別為：澳洲網球公開賽、法國網球公開賽、溫布頓網球錦標賽以及美國網球公開賽，其中歷史最悠久，被視為網球最高榮譽賽事者為溫布頓網球錦標賽。即便溫布頓網球錦標賽在1877年即舉辦，但當時的大滿貫賽事不允許職業選手參賽，直到1968年始成為公開賽事，因此世人將此後的時期稱為"網球公開化年代"，也是今次我們主要分析的時期(1968~2017)。
在早期，大滿貫比賽皆效仿溫布頓在草地上舉行，隨後逐漸發展出自己的特色。現在按場地材質可將場地分為草地、紅土、硬地及室內地毯等。
## 分析動機
此次分析主要分析勝率與球員其他數據之間的關係。網球是屬於紳士的運動，不如其他主流球類運動如足球、橄欖球或籃球等需要肢體接觸，除了顯得有些野蠻之外，也時常能發生衝突爭議。網球的競爭中，雙方揖讓而升，網子隔開雙方不會有衝突的發生，純粹是力與智的較量，堪稱最高尚的運動之一，深得朕心，是以以此為題分析，一方面對於網球有一定的背景知識了解，另一方面分析起來也比較開心，不會只為滿足老師虛應故事。
## 使用資料
GitHub Jeffsackmann repository：tennis_atp：
https://github.com/JeffSackmann/tennis_atp
使用資料：
1.公開化年代後歷年比賽資料：atp_matches_year.csv
2.歷年所有職業球員名單：atp_players.csv
3.公開化年代後球員排名波動：atp_rankings_decades.csv
載入使用資料們
```{r}
#這是R Code Chunk
library(readr)
atp_matches_1968 <- read_csv("D:/atp_datas/atp_matches_1968.csv")
atp_matches_1969 <- read_csv("D:/atp_datas/atp_matches_1969.csv")
atp_matches_1970 <- read_csv("D:/atp_datas/atp_matches_1970.csv")
atp_matches_1971 <- read_csv("D:/atp_datas/atp_matches_1971.csv")
atp_matches_1972 <- read_csv("D:/atp_datas/atp_matches_1972.csv")
atp_matches_1973 <- read_csv("D:/atp_datas/atp_matches_1973.csv")
atp_matches_1974 <- read_csv("D:/atp_datas/atp_matches_1974.csv")
atp_matches_1975 <- read_csv("D:/atp_datas/atp_matches_1975.csv")
atp_matches_1976 <- read_csv("D:/atp_datas/atp_matches_1976.csv")
atp_matches_1977 <- read_csv("D:/atp_datas/atp_matches_1977.csv")
atp_matches_1978 <- read_csv("D:/atp_datas/atp_matches_1978.csv")
atp_matches_1979 <- read_csv("D:/atp_datas/atp_matches_1979.csv")
atp_matches_1980 <- read_csv("D:/atp_datas/atp_matches_1980.csv")
atp_matches_1981 <- read_csv("D:/atp_datas/atp_matches_1981.csv")
atp_matches_1982 <- read_csv("D:/atp_datas/atp_matches_1982.csv")
atp_matches_1983 <- read_csv("D:/atp_datas/atp_matches_1983.csv")
atp_matches_1984 <- read_csv("D:/atp_datas/atp_matches_1984.csv")
atp_matches_1985 <- read_csv("D:/atp_datas/atp_matches_1985.csv")
atp_matches_1986 <- read_csv("D:/atp_datas/atp_matches_1986.csv")
atp_matches_1987 <- read_csv("D:/atp_datas/atp_matches_1987.csv")
atp_matches_1988 <- read_csv("D:/atp_datas/atp_matches_1988.csv")
atp_matches_1989 <- read_csv("D:/atp_datas/atp_matches_1989.csv")
atp_matches_1990 <- read_csv("D:/atp_datas/atp_matches_1990.csv")
atp_matches_1991 <- read_csv("D:/atp_datas/atp_matches_1991.csv")
atp_matches_1992 <- read_csv("D:/atp_datas/atp_matches_1992.csv")
atp_matches_1993 <- read_csv("D:/atp_datas/atp_matches_1993.csv")
atp_matches_1994 <- read_csv("D:/atp_datas/atp_matches_1994.csv")
atp_matches_1995 <- read_csv("D:/atp_datas/atp_matches_1995.csv")
atp_matches_1996 <- read_csv("D:/atp_datas/atp_matches_1996.csv")
atp_matches_1997 <- read_csv("D:/atp_datas/atp_matches_1997.csv")
atp_matches_1998 <- read_csv("D:/atp_datas/atp_matches_1998.csv")
atp_matches_1999 <- read_csv("D:/atp_datas/atp_matches_1999.csv")
atp_matches_2000 <- read_csv("D:/atp_datas/atp_matches_2000.csv")
atp_matches_2001 <- read_csv("D:/atp_datas/atp_matches_2001.csv")
atp_matches_2002 <- read_csv("D:/atp_datas/atp_matches_2002.csv")
atp_matches_2003 <- read_csv("D:/atp_datas/atp_matches_2003.csv")
atp_matches_2004 <- read_csv("D:/atp_datas/atp_matches_2004.csv")
atp_matches_2005 <- read_csv("D:/atp_datas/atp_matches_2005.csv")
atp_matches_2006 <- read_csv("D:/atp_datas/atp_matches_2006.csv")
atp_matches_2007 <- read_csv("D:/atp_datas/atp_matches_2007.csv")
atp_matches_2008 <- read_csv("D:/atp_datas/atp_matches_2008.csv")
atp_matches_2009 <- read_csv("D:/atp_datas/atp_matches_2009.csv")
atp_matches_2010 <- read_csv("D:/atp_datas/atp_matches_2010.csv")
atp_matches_2011 <- read_csv("D:/atp_datas/atp_matches_2011.csv")
atp_matches_2012 <- read_csv("D:/atp_datas/atp_matches_2012.csv")
atp_matches_2013 <- read_csv("D:/atp_datas/atp_matches_2013.csv")
atp_matches_2014 <- read_csv("D:/atp_datas/atp_matches_2014.csv")
atp_matches_2015 <- read_csv("D:/atp_datas/atp_matches_2015.csv")
atp_matches_2016 <- read_csv("D:/atp_datas/atp_matches_2016.csv")
atp_matches_2017 <- read_csv("D:/atp_datas/atp_matches_2017.csv")
atp_players <- read_csv("D:/atp_datas/atp_players.csv",
col_names = FALSE)
```
## 資料處理與清洗
將歷年比賽資料合成一個單一的矩陣
後在位包含欄位名稱的資料加上欄位名稱方便操作
其餘資料皆符合Tidy data要求因此不再處理
```{r}
#這是R Code Chunk
atp_matches <- rbind(atp_matches_1968, atp_matches_1969, atp_matches_1970, atp_matches_1971, atp_matches_1972, atp_matches_1973, atp_matches_1974, atp_matches_1975, atp_matches_1976, atp_matches_1977, atp_matches_1978, atp_matches_1979, atp_matches_1980, atp_matches_1981, atp_matches_1982, atp_matches_1983, atp_matches_1984, atp_matches_1985, atp_matches_1986, atp_matches_1987, atp_matches_1988, atp_matches_1989, atp_matches_1990, atp_matches_1991, atp_matches_1992, atp_matches_1993, atp_matches_1994, atp_matches_1995, atp_matches_1996, atp_matches_1997, atp_matches_1998, atp_matches_1999, atp_matches_2000, atp_matches_2001, atp_matches_2002, atp_matches_2003, atp_matches_2004, atp_matches_2005, atp_matches_2006, atp_matches_2007, atp_matches_2008, atp_matches_2009, atp_matches_2010, atp_matches_2011, atp_matches_2012, atp_matches_2013, atp_matches_2014, atp_matches_2015, atp_matches_2016, atp_matches_2017)
names(atp_players) <- c("player_id", "first_name", "last_name", "player_hand", "date_of_birth", "player_ioc")
for(i in 1:length(atp_matches$tourney_date)){
atp_matches$decade <-
if(substr(as.character(atp_matches$tourney_date[i]), 3, 3) == 6|substr(as.character(atp_matches$tourney_date[i]), 3, 3) == 7){
70
}else if(substr(as.character(atp_matches$tourney_date[i]), 3, 3) == 8){
80
}else if(substr(as.character(atp_matches$tourney_date[i]), 3, 3) == 9){
90
}else if(substr(as.character(atp_matches$tourney_date[i]), 3, 3) == 0){
00
}else if(substr(as.character(atp_matches$tourney_date[i]), 3, 3) == 1){
10
}
}
atp_matches[is.na(atp_matches$winner_age), "winner_age"] <- 0
atp_matches$age_range <- 0
for(n in 1:nrow(atp_matches)) {
if(atp_matches$winner_age[n] >= 36) {
atp_matches$age_range[n] <- "36 ~ "
} else if(atp_matches$winner_age[n] >= 31) {
atp_matches$age_range[n] <- "31 ～ 35"
} else if(atp_matches$winner_age[n] >= 26) {
atp_matches$age_range[n] <- "26 ～ 30"
} else if(atp_matches$winner_age[n] >= 21) {
atp_matches$age_range[n] <- "21 ～ 25"
} else if(atp_matches$winner_age[n] < 21 && atp_matches$winner_age[n] != 0) {
atp_matches$age_range[n] <- "~ 20"
} else {
atp_matches$age_range[n] <- "N/A"
}
}
atp_matches[is.na(atp_matches$winner_age), "winner_age"] <- 0
atp_matches$age_range <- 0
for(n in 1:nrow(atp_matches)) {
if(atp_matches$winner_age[n] >= 36) {
atp_matches$age_range[n] <- "36 ~ "
} else if(atp_matches$winner_age[n] >= 31) {
atp_matches$age_range[n] <- "31 ~ 35"
} else if(atp_matches$winner_age[n] >= 26) {
atp_matches$age_range[n] <- "26 ~ 30"
} else if(atp_matches$winner_age[n] >= 21) {
atp_matches$age_range[n] <- "21 ~ 25"
} else if(atp_matches$winner_age[n] < 21 && atp_matches$winner_age[n] != 0) {
atp_matches$age_range[n] <- "~ 20"
} else {
atp_matches$age_range[n] <- "N/A"
}
}
library(dplyr)
library(ggplot2)
atp_matches$surface<-as.factor(atp_matches$surface)
ace.mean<-atp_matches%>%filter(!is.na(surface))%>%
group_by(surface)%>%summarise(aceMean=mean(as.numeric(w_ace), na.rm = T))
ggplot()+geom_bar(data=ace.mean,
aes(x=surface,y=aceMean),
stat = "identity",
fill="darkgreen",
color="orange")
library(data.table)
winner_iocAnalysis <- data.table(atp_matches)
winner_iocAnalysis <- winner_iocAnalysis[, .(Win = .N), by = winner_ioc]
colnames(winner_iocAnalysis)[1] <- "ioc"
winner_iocAnalysis
iocAnalysis <- data.table(atp_matches)
loser_iocAnalysis <- iocAnalysis[, .(Lose = .N), by = loser_ioc]
colnames(loser_iocAnalysis)[1] <- "ioc"
loser_iocAnalysis
iocAnalysis <- merge(winner_iocAnalysis, loser_iocAnalysis, by = "ioc")
iocAnalysis$Total <- iocAnalysis$Win + iocAnalysis$Lose
iocAnalysis$Proportion <- iocAnalysis$Win / iocAnalysis$Total
library(treemap)
treemap(iocAnalysis,
index="ioc", #分組依據
vSize="Total", #區塊大小
vColor="Proportion", #顏色深淺
type="value")
ggplot(atp_matches,
aes(x = surface,
y = w_bpSaved)) +
geom_boxplot()
atp_matches$w_bpSaved <- as.numeric(atp_matches$w_bpSaved)
ggplot(atp_matches,
aes(x = surface,
y = w_bpSaved)) +
geom_boxplot()
ggplot(atp_matches,
aes(x = best_of,
y = w_ace)) +
geom_boxplot()
atp_matches$w_svpt <- as.numeric(atp_matches$w_svpt)
ggplot(atp_matches,
aes(x = surface,
y = w_svpt)) +
geom_boxplot()
ggplot(atp_matches,
aes(x = surface,
y = winner_age)) +
geom_boxplot()
ggplot(atp_matches,
aes(x = surface,
y = w_bpFaced)) +
geom_boxplot()
atp_matches$w_bpFaced <- as.numeric(atp_matches$w_bpFaced)
ggplot(atp_matches,
aes(x = surface,
y = w_bpFaced)) +
geom_boxplot()
